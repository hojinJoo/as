ResNet(
  (relu): ReLU()
  (conv1): Conv2d(4, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (norm1): GroupNorm(32, 64, eps=1e-05, affine=True)
  (stages): ModuleList(
    (0): Sequential(
      (0): BottleNeckResNetBlock(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 64, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 64, eps=1e-05, affine=True)
        (residual_conv): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (1): BottleNeckResNetBlock(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 64, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 64, eps=1e-05, affine=True)
        (residual_conv): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (2): BottleNeckResNetBlock(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 64, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 64, eps=1e-05, affine=True)
        (residual_conv): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (1): Sequential(
      (0): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 128, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 128, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 512, eps=1e-05, affine=True)
      )
      (1): BottleNeckResNetBlock(
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 128, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 128, eps=1e-05, affine=True)
        (residual_conv): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 512, eps=1e-05, affine=True)
      )
      (2): BottleNeckResNetBlock(
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 128, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 128, eps=1e-05, affine=True)
        (residual_conv): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 512, eps=1e-05, affine=True)
      )
      (3): BottleNeckResNetBlock(
        (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 128, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 128, eps=1e-05, affine=True)
        (residual_conv): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 512, eps=1e-05, affine=True)
      )
    )
    (2): Sequential(
      (0): BottleNeckResNetBlock(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (1): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (2): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (3): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (4): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (5): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (6): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (7): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (8): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (9): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (10): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (11): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (12): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (13): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (14): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (15): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (16): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (17): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (18): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (19): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (20): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (21): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
      (22): BottleNeckResNetBlock(
        (conv1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 256, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 256, eps=1e-05, affine=True)
        (residual_conv): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 1024, eps=1e-05, affine=True)
      )
    )
    (3): Sequential(
      (0): BottleNeckResNetBlock(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 512, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 512, eps=1e-05, affine=True)
        (residual_conv): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 2048, eps=1e-05, affine=True)
      )
      (1): BottleNeckResNetBlock(
        (conv1): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 512, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 512, eps=1e-05, affine=True)
        (residual_conv): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 2048, eps=1e-05, affine=True)
      )
      (2): BottleNeckResNetBlock(
        (conv1): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm1): GroupNorm(32, 512, eps=1e-05, affine=True)
        (relu): ReLU()
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (norm2): GroupNorm(32, 512, eps=1e-05, affine=True)
        (residual_conv): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (norm3): GroupNorm(32, 2048, eps=1e-05, affine=True)
      )
    )
  )
)